labelidx
nCols
istest
set.seed(123)
# con <- file(inFile, open="r")
inPath <- "/Users/tyler/Benchmarks/Data/uci/"
outPath <- "/Users/tyler/Benchmarks/Data/uci/RData/"
contents.all <- list.files(paste(inPath,"data/",sep = ""))
contents.notest <- contents.all[!grepl(".test",contents.all)]
# loop through datasets
for (fileName in contents.notest) {
dataSet <- strsplit(fileName,"\\.")[[1]][1]
print(dataSet)
f <- file(paste(inPath,"missing/",dataSet,".missing",sep = ""), open = "r")
missing <- readLines(f, n = 1)
close(f)
if (paste(dataSet,".test.data",sep = "") %in% contents.all) {
istest <- T
} else{
istest <- F
}
f <- file(paste(inPath, "data/", dataSet, ".data", sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
nCols <- length(strsplit(l, ",")[[1]])
f <- file(paste(inPath,"delimiter/",dataSet,".delimiter",sep = ""), open = "r")
dlm <- readLines(f, n = 1)
close(f)
if (dlm == "\\t") {
dlm <- "\t"
}
f <- file(paste(inPath,"binary/",dataSet,".bin",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
binidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
binidx <- NULL
}
f <- file(paste(inPath,"categorical/",dataSet,".cat",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
catidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
catidx <- NULL
}
f <- file(paste(inPath,"ordinal/",dataSet,".ord",sep = ""), open = "r")
l <- readLines(f)
close(f)
nOrd <- length(l)
if (nOrd > 0) {
ordmap <- strsplit(l, " ")
ordidx <- rep(0, nOrd)
for (i in 1:nOrd) {
ordidx[i] <- as.integer(ordmap[[i]][1]) + 1
}
} else {
ordidx <- NULL
ordmap <- NULL
}
f <- file(paste(inPath,"label/",dataSet,".label",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
labelidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
labelidx <- NULL
}
f <- file(paste(inPath,"remove/",dataSet,".remove",sep = ""), open = "r")
l <- readLines(f, n = 1)
close(f)
if (length(l) > 0) {
removeidx <- lapply(strsplit(l, ","), as.integer)[[1]] + 1
} else {
removeidx <- NULL
}
# specify data type for each column
colClass <- rep("numeric", nCols)
colClass[binidx] <- "factor"
colClass[catidx] <- "factor"
colClass[ordidx] <- "factor"
colClass[labelidx] <- "factor"
colClass[removeidx] <- "factor"
df <- read.table(paste(inPath, "data/", dataSet, ".data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
metadata <- list()
metadata$nominal <- c(binidx,catidx)
if (!is.null(metadata$nominal)) {
metadata$nominal <- sort(metadata$nominal)
}
metadata$label <- labelidx
metadata$ordinal <- ordmap
metadata$remove <- removeidx
save(df, metadata, file = paste(outPath,dataSet,".RData",sep = ""))
if (istest) {
df <- read.table(paste(inPath, "data/", dataSet, ".test.data", sep = ""), sep = dlm, colClasses = colClass, na.strings = missing)
save(df, metadata, file = paste(outPath,dataSet,".test.RData",sep = ""))
}
}
setwd("/Users/tyler")
ls()
dir()
install.packages(rmarkdown)
install.packages("rmarkdown")
x <- sample.int(10L, 10L, replace = T)
x
tabulate(x, 10L)
seq_along(c(10,111,-10))
rm(list = ls())
source("~/R-RerF/rfr_function.R")
source("~/R-RerF/rfr_function.R", chdir = T)
X <- as.matrix(iris[, 1:4])
Y <- as.integer(iris[, 5L])
forest <- rerf(X = X, Y = Y, MinParent = 6L, trees = 500L, replacement = T, stratify = T, COOB = T, NumCores = 4L, seed = 123L)
forest[[1]]
similarity <- compute.similarity(Forest = forest, X = X, NumCores = 4L)
source("~/R-RerF/rfr_function.R", chdir = T)
similarity <- compute.similarity(Forest = forest, X = X, NumCores = 4L)
source("~/R-RerF/rfr_function.R", chdir = T)
similarity <- compute.similarity(Forest = forest, X = X, NumCores = 1L)
source("~/R-RerF/rfr_function.R", chdir = T)
source("~/R-RerF/rfr_function.R", chdir = T)
similarity <- compute.similarity(Forest = forest, X = X, NumCores = 1L)
similarity
similarity[, 1]
forest <- rerf(X = X, Y = Y, MinParent = 2L, trees = 500L, replacement = T, stratify = T, COOB = T, NumCores = 4L, seed = 123L)
similarity <- compute.similarity(Forest = forest, X = X, NumCores = 4L)
similarity[, 1]
similarity[upper.tri(similarity)] <- t(similarity[lower.tri(similarity)])
similarity
similarity[, 1]
similarity[1, ]
similarity <- compute.similarity(Forest = forest, X = X, NumCores = 4L)
similarity <- similarity + t(similarity)
similarity[, 1]
similarity[1, ]
similarity[, 2]
similarity[2, ]
require(corrplot)
corrplot(similarity)
diag(3)
diag(10, 3, 3)
source("~/R-RerF/rfr_function.R", chdir = T)
similarity <- compute.similarity(Forest = forest, X = X, NumCores = 4L)
similarity <- similarity + t(similarity)
corrplot(similarity)
similarity
similarity[1]
similarity[1, ]
diag(similarity) <- 1
similarity
similarity[1, ]
source("~/R-RerF/rfr_function.R", chdir = T)
similarity <- compute.similarity(Forest = forest, X = X, NumCores = 4L)
corrplot(similarity)
corrplot(similarity, is.corr = F)
fmriu.plot.plot_graph <- function(mtx, title="",xlabel="ROI", ylabel="ROI", legend.name="metric", legend.show=TRUE, itype="sq",
font.size=12, rem_diag=FALSE, include_diag=FALSE, limits=c(0, 1)) {
if (itype == "ts") {
mtx <- abs(cor(mtx))  # if a timeseries is passed in, correlate the features first
}
if (!include_diag) {
diag(mtx) <- 0
}
dm <- melt(mtx)
colnames(dm) <- c("x", "y", "value")
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
sqplot <- ggplot(dm, aes(x=x, y=y, fill=value)) +
geom_tile() +
scale_fill_gradientn(colours=jet.colors(7), name=legend.name, limits=limits) +
xlab(xlabel) +
ylab(ylabel) +
ggtitle(title)
if (legend.show) {
sqplot <- sqplot +
theme(text=element_text(size=font.size))
} else {
sqplot <- sqplot +
theme(text=element_text(size=font.size, legend.position="none"))
}
return(sqplot)
}
fmriu.plot.plot_graph(mtx = similarity, xlabel = "", ylabel = "", title = "similarity on iris")
require(ggplot2)
require(reshape2)
fmriu.plot.plot_graph(mtx = similarity, xlabel = "", ylabel = "", title = "similarity on iris")
similarity[1]
similarity[1, 10]
fmriu.plot.plot_graph(mtx = similarity, xlabel = "", ylabel = "", title = "similarity on iris", include_diag = T)
unique(Ytest)
seq.int(10)
fmriu.plot.plot_graph(mtx = similarity, xlabel = "", ylabel = "", title = "similarity on mnist", include_diag = T, legend.name = "RerF\nsimilarity")
file.edit("~/tmp/uci/base/code/process_benchmarks.R")
file.edit("~/Downloads/rfr_functionBaseline.R")
?.Internal
file.edit("~/tmp/uci/base/code/process_benchmarks.R")
l <- list()
l[["asdf"]] <- 1
l
l["asdf"]
l[["asdf"]]
l["asdf"] <- 1
l
l["asdf"] <- c("a","b")
l[["asdf"]] <- c("a","b")
l
cl
cl <- c("a", "b", "c")
cl
l <- vector("list", 3L)
l
names(l) <- cl
l
rm(list = ls())
source("~/R-RerF/rfr_function.R")
source("~/R-RerF/rfr_function.R", chdir = T)
options <- list(3L, 1L, "poisson", 1L)
options
randmat(options)
NULL != 0L
if (NULL != 0L) {print("asdf")}
if (NA != 0L) {print("asdf")}
a[1]
source("~/R-RerF/rfr_function.R", chdir = T)
randmat(options)
rm(list = ls())
source("~/R-RerF/rfr_function.R", chdir = T)
options <- list(3L, 1L, "poisson", 1L)
randmat(options)
options[[3]] <- "frc"
randmat(options)
options[[4]] <- 2
options[[4]] <- 2L
randmat(options)
options
randmat(options)
source("~/R-RerF/rfr_function.R", chdir = T)
options
options[[3]] <- "poisson"
options[[4]] <- 1L
randmat(options)
rm(list = ls())
source("~/R-RerF/rfr_function.R", chdir = T)
randmat(options)
options
options <- list(3L, 1L, "poisson", 1L)
randmat(options)
rm(list = ls())
options <- list(3L, 1L, "poisson", 1L)
source("~/R-RerF/rfr_function.R", chdir = T)
randmat(options)
randmat(options)
randmat(options)
randmat(options)
rm(list = ls())
source("~/R-RerF/rfr_function.R", chdir = T)
options <- list(3L, 1L, "frc", 2L)
randmat(options)
randmat(options)
options <- list(3L, 1L, "frcn", 2L)
randmat(options)
randmat(options)
randmat(options)
FUN
get.folds("~/tmp/uci/processed/cv_partitions/iris_partitions.txt")
fold <- get.folds("~/tmp/uci/processed/cv_partitions/iris_partitions.txt")
unlist(fold)
unlist(fold[1:4])
fold
fold[-4]
fold[-c(1,3)]
Y <- sample.int(5L, size = 3)
Y
Y <- sample.int(5L, size = 10L, replace = T)
Y
Y <- sample.int(5L, size = 5L, replace = T)
Y
Y <- sample.int(5L, size = 5L, replace = T)
Y
tabulate(Y)
tabulate(Y, 6L)
ind <- integer(10L)
ind
ind[1:0] <- 1L
ind
which(ind == 2L)
?dummy
Y
dummy(Y)
Yf <- as.factor(Y)
Yf
levels(Yf)
levels(Yf) <- 1:5
levels(Yf)
dummy(Yf)
dummy(Yf, frop = F)
dummy(Yf, drop = F)
Yf
Y
Yf <- factor(Y, levels = 1:5)
Yf
dummy(Yf, drop = F)
Y
setwd("~/RerF/Code/Experiments/2017.09.10/")
getwd()
choose(10000, 2)
?ggplot
file.edit("~/R-RerF/rerf/R/rerf.R")
file.edit("~/RerF/Code/Classifiers/rfr_function.R")
file.edit("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/rerf/R/rerf.R")
file.edit("~/R-RerF/rerf/R/runerrOOB.R")
file.edit("~/R-RerF/rerf/R/runpredict.R)
file.edit("~/R-RerF/rerf/R/runpredict.R")
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
file.edit("~/R-RerF/rerf/R/rerf.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/rerf.R")
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
file.edit("~/R-RerF/rerf/R/runpredict.leaf.R")
file.edit("~/R-RerF/rerf/R/ComputeSimilarity.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/groupidx.R")
file.edit("~/R-RerF/rerf/R/RandMat.R")
file.edit("~/R-RerF/rerf/R/rmat.R")
file.edit("~/R-RerF/rerf/R/RandMatCat.R")
file.edit("~/R-RerF/rerf/R/rrot.R")
file.edit("~/R-RerF/rerf/R/runRankInterpolate.R.R")
file.edit("~/R-RerF/rerf/R/runRankInterpolate.R")
file.edit("~/R-RerF/rerf/R/strcorr.R")
file.edit("~/R-RerF/rerf/R/run.strcorr.R")
file.edit("~/R-RerF/rerf/R/GetFolds.R")
file.edit("~/R-RerF/rerf/R/RandMatCat.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/GetCatMap.R")
file.edit("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/rerf/R/rerf.R")
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
file.edit("~/R-RerF/rerf/R/RunOOB.R")
file.edit("~/R-RerF/rerf/R/RunOOB.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/RunOOB.R")
file.edit("~/R-RerF/rerf/R/runpredict.R")
file.edit("~/R-RerF/rerf/R/RunOOB.R")
file.edit("~/R-RerF/rerf/R/RunPredict.R")
file.edit("~/R-RerF/rerf/R/GetCatMap.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
file.edit("~/R-RerF/rerf/R/GetFolds.R")
file.edit("~/R-RerF/rerf/R/strcorr.R")
file.edit("~/R-RerF/rerf/R/run.strcorr.R")
file.edit("~/R-RerF/rerf/R/ComputeSimilarity.R")
file.edit("~/R-RerF/rerf/R/runpredict.leaf.R")
file.edit("~/R-RerF/rerf/R/ComputeSimilarity.R")
file.edit("~/R-RerF/rerf/R/ComputeSimilarity.R")
file.edit("~/R-RerF/rerf/R/GetCatMap.R")
file.edit("~/R-RerF/rerf/R/GetFolds.R")
file.edit("~/R-RerF/rerf/R/RandMat.R")
file.edit("~/R-RerF/rerf/R/RandMat.R")
file.edit("~/R-RerF/rerf/R/RandMatCat.R")
file.edit("~/R-RerF/rerf/R/RandMatCat.R")
setwd("~/RerF/Code/Utils/")
file.edit("~/R-RerF/rerf/R/RandMat.R")
file.edit("~/R-RerF/rerf/R/PlotSimilarity.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
file.edit("~/R-RerF/rerf/R/RandMat.R")
file.edit("~/R-RerF/rerf/R/RandMatCat.R")
file.exists("~/asdf")
file.exists("~/R-RerF/rfr_function.R")
file.exists("~/R-RerF/rerf/R/BuildTree.R)
file.exists("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/rerf/R/RunOOB.R")
file.edit("~/R-RerF/rerf/R/RunPredict.R")
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/ComputeSimilarity.R")
file.edit("~/R-RerF/rerf/R/StrCorr.R")
file.edit("~/R-RerF/rerf/R/StrCorr.R~")
iris
names(iris$Species)
levels(iris$Species)
as.integer(iris$Species)
iris$Species
unique(iris$Species)
y <- iris$Species[c(150,100,50)]
y
unique(y)
sort(unique(y))
tabulate(iris%Species)
tabulate(iris$Species)
y <- sample.int(3L 10L, replace = T)
y <- sample.int(3L, 10L, replace = T)
y
as.factor(y)
y[[y==3]] <- 4L
y[y==3] <- 4L
y
as.factor(y)
is.numeric(10L)
as.integer(as.factor(y))
levels(as.factor(y))
as.integer(levels(as.factor(y)))
unique(y)
y
sort(unique(y))
as.integer(as.factor(y))
y
file.edit("~/R-RerF/rerf/R/RunOOB.R")
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
Y <- sample.int(4L,6L)
Y <- sample.int(4L,6L, replace = T)
Y
Y <- sample.int(4L, 6L, replace = T)
Y
Y <- sample.int(4L, 6L, replace = T)
Y
yf <- as.factor(Y)
levels(yf)
as.integer(yf)
sort(unique(y))
sort(unique(Y))
levels(yf)
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/StrCorr.R")
c("a", "b", "c", "d")
as.matrix(c("a", "b", "c", "d"), 2, 2)
matrix(c("a", "b", "c", "d"), 2, 2)
matrix(c("aa", "bb", "cc", "dd"), 2, 2)
c(matrix(c("aa", "bb", "cc", "dd"), 2, 2))
unique(c(matrix(c("aa", "bb", "cc", "dd"), 2, 2)))
matrix(c("aa", "bb", "cc", "dd"), 2, 2)
as.factor(matrix(c("aa", "bb", "cc", "dd"), 2, 2))
factor(matrix(c("aa", "bb", "cc", "dd"), 2, 2))
as.matrix(factor(matrix(c("aa", "bb", "cc", "dd"), 2, 2)))
matrix(factor(matrix(c("aa", "bb", "cc", "dd"), 2, 2)), 2, 2)
matrix(c("aa", "bb", "cc", "dd"), 2, 2)
y <- matrix(c("aa", "bb", "cc", "dd"), 2, 2)
yy <- c("bb", "ee", "bb", "dd")
yy
unique(c(y, yy))
cl.labels <- unique(c(y, yy))
matrix(as.integer(factor(y, levels = cl.labels)), nrow = nrow(y), ncol = ncol(y))
yy
as.integer(factor(yy, levels = cl.labels))
file.edit("~/R-RerF/rerf/R/ComputeSimilarity.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
class(1L)
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/GetCatMap.R")
file.edit("~/R-RerF/rerf/R/RandMat.R")
file.edit("~/R-RerF/rerf/R/RandMatCat.R")
file.edit("~/R-RerF/rerf/R/RerFEval.R")
file.edit("~/R-RerF/utils/RerFEval.R")
file.edit("~/R-RerF/utils/PlotSimilarity.R")
file.edit("~/R-RerF/utils/BuildTree.R")
file.edit("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/rerf/R/ComputeSimilarity.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/ComputeSimilarity.R")
file.edit("~/R-RerF/rerf/R/StrCorr.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/StrCorr.R")
file.edit("~/R-RerF/rerf/R/StrCorr.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
file.edit("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/utils/RerFEval.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
file.edit("~/R-RerF/rerf/R/ComputeSimilarity.R")
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
file.edit("~/R-RerF/rerf/R/RandMat.R")
file.edit("~/R-RerF/rerf/R/RandRot.R")
file.edit("~/R-RerF/rerf/R/RannkInterpolate.R")
file.edit("~/R-RerF/rerf/R/RankInterpolate.R")
file.edit("~/R-RerF/rerf/R/RankInterpolateVector.R")
file.edit("~/R-RerF/rerf/R/RankMatrix.R")
file.edit("~/R-RerF/rerf/R/RunErr.R")
file.edit("~/R-RerF/rerf/R/RunOOB.R")
file.edit("~/R-RerF/rerf/R/RunPredict.R")
file.edit("~/R-RerF/rerf/R/SampleMode.R")
file.edit("~/R-RerF/rerf/R/StrCorr.R")
file.edit("~/RerF/Code/Experiments/2017.09.22/run_Benchmarks_2017_09_22.R")
file.edit("~/R-RerF/utils/RerFEval.R")
file.edit("~/R-RerF/rerf/R/GetCatMap.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
file.edit("~/R-RerF/utils/GetFolds.R")
file.edit("~/R-RerF/utils/RerFEval.R")
file.edit("~/R-RerF/utils/RerFEval.R")
file.edit("~/R-RerF/rerf/R/RerF.R")
file.edit("~/R-RerF/utils/GetCatMap.R")
file.edit("~/R-RerF/rerf/R/RandMatCat.R")
file.edit("~/R-RerF/rerf/R/RandMatCat.R")
file.edit("~/R-RerF/rerf/R/RankInterpolateVector.R.R")
file.edit("~/R-RerF/rerf/R/RankInterpolateVector.R")
file.edit("~/R-RerF/rerf/R/RankInterpolate.R")
file.edit("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/rerf/R/RandMat.R")
file.edit("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/rerf/R/BuildTree.R")
file.edit("~/R-RerF/rerf/R/RandMat.R")
file.edit("~/R-RerF/rerf/R/RandRot.R")
file.edit("~/R-RerF/rerf/R/RandRot.R")
file.edit("~/R-RerF/rerf/R/Predict.R")
file.edit("~/R-RerF/rerf/R/OOBPredict.R")
